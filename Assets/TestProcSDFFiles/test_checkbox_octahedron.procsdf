{
   "materialSettings" : {
      "0" : {
         "color" : [ 1.0, 0.0, 0.0 ],
         "materialType" : "Diffuse"
      },
      "1" : {
         "color" : [ 0.82393085956573486, 0.5166282057762146, 0.84313726425170898 ],
         "inputFloat" : [ 0.74000000953674316, 0.019999999552965164 ],
         "materialType" : "Dielectric"
      },
      "2" : {
         "color" : [ 1.0, 0.0, 0.0 ],
         "customName" : "Checkerboard",
         "fileName" : "Checkerboard.glsl",
         "inputFloat" : [ 0.0 ],
         "materialType" : "Custom"
      },
      "customFileContent" : {
         "Checkerboard.glsl" : "\n// name Checkerboard\n// float_params divide_by\nscatter_info Checkerboard_scatter(in vec3 position, in vec3 normal, in vec3 r_in, in bool is_front_face, in vec3 color, in float divide_by)\n{\n  if(divide_by == 0.0)\n  {\n    divide_by = 0.01;\n  }\n  int x = int(r_in.x/divide_by);\n  int y = int(r_in.y/divide_by);\n  vec3 atten = vec3(1.0, 1.0, 1.0);\n  if((x%2 == 0) && (y%2 == 0))\n  {\n    atten = vec3(0.0, 0.0, 0.0);\n  }\n  vec3 scattered = position + random_in_hemisphere(normal, position);\n  //atten = color;\n  return scatter_info(scattered, true, atten);\n}\n"
      },
      "materialID" : [ 0, 1, 2 ]
   },
   "nodeGraphSettings" : {
      "0" : {
         "fileName" : "octahedron.glsl",
         "inputFloat" : [ 3.0 ],
         "nodeName" : "Octahedron",
         "outputIDS" : [ 1 ]
      },
      "10" : {
         "inputFloat" : [ -1.0 ],
         "inputIDs" : [ 11 ],
         "nodeName" : "Rotation_Y",
         "outputIDS" : [ 12 ]
      },
      "2" : {
         "inputIDs" : [ 3 ],
         "nodeName" : "Final node"
      },
      "4" : {
         "inputIDs" : [ 5 ],
         "materialID" : "2",
         "nodeName" : "Object node",
         "outputIDS" : [ 6 ]
      },
      "7" : {
         "inputFloat" : [ -9.0 ],
         "inputIDs" : [ 8 ],
         "nodeName" : "Rotation_X",
         "outputIDS" : [ 9 ]
      },
      "customFileContent" : {
         "octahedron.glsl" : "\n// type primitive\n// name Octahedron\n// float_params s\nfloat Octahedron( in vec3 p, in float s)\n{\n  p = abs(p);\n  return (p.x+p.y+p.z-s)*0.57735027;\n}\n"
      },
      "nodeID" : [ 2, 4, 0, 7, 10 ],
      "nodeLink" : [
         [ 6, 3 ],
         [ 12, 5 ],
         [ 9, 11 ],
         [ 1, 8 ]
      ]
   },
   "renderSettings" : {
      "renderDebugColor" : [
         [ 1.0, 0.0, 0.0 ],
         [ 0.0, 1.0, 0.0 ],
         [ 0.0, 0.0, 1.0 ]
      ],
      "renderDebugValues" : [ false, false, false, false ],
      "renderValues" : [ 16, 10, 16, 1000 ]
   },
   "worldSettings" : {
      "cameraOrigin" : [ 0.0, 0.0, 4.0 ],
      "focalLength" : 1.0,
      "horizonBottomColor" : [ 0.5, 0.69999998807907104, 1.0 ],
      "horizonTopColor" : [ 1.0, 1.0, 1.0 ]
   }
}
